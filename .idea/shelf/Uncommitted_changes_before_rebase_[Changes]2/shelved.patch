Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\"/>\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\"/>\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:label=\"@string/app_name\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.SE_APP\"\r\n        android:usesCleartextTraffic=\"true\"\r\n        tools:targetApi=\"31\">\r\n\r\n        <activity android:name=\".CalendarActivity\"/>\r\n        <activity android:name=\".EditActivity\"/>\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".LoginActivity\"/>\r\n        <activity android:name=\".MypageActivity\"/>\r\n        <activity android:name=\".RegisterActivity\"/>\r\n\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 98d278e2248b829c17b1c771e68f9f0d0f7b5981)
+++ b/app/src/main/AndroidManifest.xml	(date 1701099752352)
@@ -17,18 +17,21 @@
         tools:targetApi="31">
 
         <activity android:name=".CalendarActivity"/>
+        <activity android:name=".DayActivity"/>
         <activity android:name=".EditActivity"/>
         <activity
-            android:name=".MainActivity"
+            android:name=".LoginActivity"
             android:exported="true">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
-        <activity android:name=".LoginActivity"/>
+        <activity android:name=".MainActivity"/>
         <activity android:name=".MypageActivity"/>
         <activity android:name=".RegisterActivity"/>
+        <activity android:name=".TimeActivity"/>
+        <activity android:name=".RankActivity"/>
 
     </application>
 
Index: app/src/main/java/com/example/se_app/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.se_app;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.se_app.dto.LoginDTO;\r\nimport com.example.se_app.instance.RetrofitInstance;\r\nimport com.example.se_app.service.Service;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\npublic class LoginActivity extends AppCompatActivity {\r\n\r\n    private static final String TAG = LoginActivity.class.getSimpleName();\r\n    Service service = RetrofitInstance.getRetrofitInstance().create(Service.class);\r\n    private SharedPreferences sharedPreferences;\r\n\r\n    /* 화면 시작 시 실행 함수 */\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n\r\n        EditText et_id = findViewById(R.id.et_id); //아이디 입력 칸\r\n        EditText et_pw = findViewById(R.id.et_pw); //비밀번호 입력 칸\r\n\r\n        //로그인 버튼 클릭 시 실행\r\n        clickBtnLogin(et_id, et_pw);\r\n\r\n        //회원가입 버튼 클릭 시 실행\r\n        clickBtnRegister();\r\n    }\r\n\r\n    /* 로그인 버튼 클릭 시 실행 함수 */\r\n    void clickBtnLogin(EditText et_id, EditText et_pw) {\r\n\r\n        Button btn_login = findViewById(R.id.btn_login);\r\n        btn_login.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                LoginDTO.LoginRequest loginRequest = new LoginDTO.LoginRequest(et_id.getText().toString(), et_pw.getText().toString());\r\n                Call<LoginDTO.LoginResponse> call = service.login(loginRequest);\r\n                call.enqueue(new Callback<LoginDTO.LoginResponse>() {\r\n                    //서버와 통신 성공\r\n                    @Override\r\n                    public void onResponse(Call<LoginDTO.LoginResponse> call, Response<LoginDTO.LoginResponse> response) {\r\n                        //응답 성공(200): 아이디와 비밀번호가 모두 일치할 때\r\n                        if (response.isSuccessful()) {\r\n                            //body에 있는 토큰 값 저장\r\n                            String token = response.body().getToken();\r\n\r\n                            //SharedPreferences로 토큰 저장\r\n                            setToken(token);\r\n\r\n                            //body에 있는 로그인 성공 메세지 저장\r\n                            String message = response.body().getMessage();\r\n\r\n                            //로그인 성공 메세지를 토스트 메세지로 출력\r\n                            Toast.makeText(LoginActivity.this, message, Toast.LENGTH_SHORT).show();\r\n\r\n                            //MainActivity로 이동\r\n                            Intent intent = new Intent(LoginActivity.this, MainActivity.class);\r\n                            startActivity(intent);\r\n                        }\r\n                        //응답 실패(404): 아이디 또는 비밀번호가 일치하지 않을 때\r\n                        else if (response.code() == 404) {\r\n                            //에러 메세지를 토스트 메세지로 출력\r\n                            Toast.makeText(LoginActivity.this, response.body().getMessage(), Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n\r\n                    //서버와 통신 실패\r\n                    @Override\r\n                    public void onFailure(Call<LoginDTO.LoginResponse> call, Throwable t) {\r\n                        Toast.makeText(LoginActivity.this, \"서버와 통신을 실패하였습니다.\", Toast.LENGTH_SHORT).show();\r\n                        Log.e(TAG, \"서버 통신 실패: \" + t.getMessage());\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /* 회원가입 버튼 클릭 시 실행 함수 */\r\n    void clickBtnRegister() {\r\n        Button btn_register = findViewById(R.id.btn_confirm);\r\n        btn_register.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //RegisterActivity로 이동\r\n                Intent intent = new Intent(LoginActivity.this, RegisterActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n    }\r\n\r\n    /* SharedPreferences로 토큰을 저장하는 함수 */\r\n    void setToken(String token) {\r\n        sharedPreferences = getSharedPreferences(\"token\", MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putString(\"token\", token);\r\n        editor.apply();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/se_app/LoginActivity.java b/app/src/main/java/com/example/se_app/LoginActivity.java
--- a/app/src/main/java/com/example/se_app/LoginActivity.java	(revision 98d278e2248b829c17b1c771e68f9f0d0f7b5981)
+++ b/app/src/main/java/com/example/se_app/LoginActivity.java	(date 1701088277509)
@@ -66,11 +66,18 @@
                             String message = response.body().getMessage();
 
                             //로그인 성공 메세지를 토스트 메세지로 출력
-                            Toast.makeText(LoginActivity.this, message, Toast.LENGTH_SHORT).show();
+                            if (message != null) {
+                                Toast.makeText(LoginActivity.this, message, Toast.LENGTH_SHORT).show();
+                            }
 
+                            /*
                             //MainActivity로 이동
                             Intent intent = new Intent(LoginActivity.this, MainActivity.class);
                             startActivity(intent);
+                            */
+
+                            Intent intent = new Intent(LoginActivity.this, CalendarActivity.class);
+                            startActivity(intent);
                         }
                         //응답 실패(404): 아이디 또는 비밀번호가 일치하지 않을 때
                         else if (response.code() == 404) {
Index: app/src/main/java/com/example/se_app/MypageActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.se_app;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.se_app.dto.MypageDTO;\r\nimport com.example.se_app.instance.RetrofitInstance;\r\nimport com.example.se_app.service.Service;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\npublic class MypageActivity extends AppCompatActivity {\r\n\r\n    private static final String TAG = RegisterActivity.class.getSimpleName();\r\n    Service service = RetrofitInstance.getRetrofitInstance().create(Service.class);\r\n\r\n    /* 화면 시작 시 실행 함수 */\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_mypage);\r\n\r\n        TextView tv_titleName = findViewById(R.id.tv_titleName); //상단 이름\r\n        TextView tv_studentId = findViewById(R.id.tv_studentId); //학번(아이디)\r\n        TextView tv_password = findViewById(R.id.tv_password); //비밀번호\r\n        TextView tv_name = findViewById(R.id.tv_name); //이름\r\n        TextView tv_major = findViewById(R.id.tv_major); //학과\r\n        TextView tv_birth = findViewById(R.id.tv_birth); //생년월일\r\n        TextView tv_state = findViewById(R.id.tv_state); //상태(재학/휴학/졸업)\r\n\r\n        //SharedPreferences에서 토큰 가져오기\r\n        String token = getToken();\r\n\r\n        //사용자 정보 가져오기\r\n        getUserData(token, tv_titleName, tv_studentId, tv_password, tv_name, tv_major, tv_birth, tv_state);\r\n\r\n        //정보 수정 버튼 클릭 시 실행\r\n        clickBtnEdit();\r\n\r\n        //하단 캘린더 버튼 클릭 시 실행 구문\r\n        clickBtnCalendar();\r\n\r\n        //하단 홈 버튼 클릭 시 실행 구문\r\n        clickBtnHome();\r\n    }\r\n\r\n    /* SharedPreferences에서 토큰을 가져오는 함수 */\r\n    String getToken() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"token\", MODE_PRIVATE);\r\n        String token = sharedPreferences.getString(\"token\", \"\");\r\n        return token;\r\n    }\r\n\r\n    /* 사용자의 정보를 가져오는 함수 */\r\n    void getUserData(String token, TextView tv_titleName, TextView tv_studentId, TextView tv_password, TextView tv_name, TextView tv_major, TextView tv_birth, TextView tv_state) {\r\n        Call<MypageDTO.MypageResponse> call = service.mypage(\"Bearer \" + token);\r\n        call.enqueue(new Callback<MypageDTO.MypageResponse>() {\r\n            //서버와 통신 성공\r\n            @Override\r\n            public void onResponse(Call<MypageDTO.MypageResponse> call, Response<MypageDTO.MypageResponse> response) {\r\n                //응답 성공(200): 데이터베이스에서 회원 정보를 제대로 읽어왔을 때\r\n                if (response.isSuccessful()) {\r\n                    //정보 출력\r\n                    tv_titleName.setText(response.body().getMemberName());\r\n                    tv_studentId.setText(\"학번 : \" + response.body().getMemberId());\r\n                    tv_password.setText(\"비밀번호 : \" + response.body().getMemberPw());\r\n                    tv_name.setText(\"이름 : \" + response.body().getMemberName());\r\n                    tv_major.setText(\"학과 : \" + response.body().getMemberMajor());\r\n                    tv_birth.setText(\"생년월일 : \" + response.body().getMemberBirth());\r\n                    tv_state.setText(\"상태 : \" + response.body().getMemberState());\r\n                }\r\n            }\r\n\r\n            //서버와 통신 실패\r\n            @Override\r\n            public void onFailure(Call<MypageDTO.MypageResponse> call, Throwable t) {\r\n                Toast.makeText(MypageActivity.this, \"서버와 통신을 실패하였습니다.\", Toast.LENGTH_SHORT).show();\r\n                Log.e(TAG, \"서버 통신 실패: \" + t.getMessage());\r\n            }\r\n        });\r\n    }\r\n\r\n    /* 정보 수정 버튼 클릭 시 실행 함수 */\r\n    void clickBtnEdit() {\r\n        Button btn_edit = findViewById(R.id.btn_edit);\r\n        btn_edit.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //EditActivity로 이동\r\n                Intent intent = new Intent(MypageActivity.this, EditActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n    }\r\n    \r\n    /* 하단 캘린더 버튼 클릭 시 실행 함수 */\r\n    void clickBtnCalendar() {\r\n        Button btn_calendar = findViewById(R.id.btn_calendar);\r\n        btn_calendar.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //CalendarActivity로 이동\r\n                Intent intent = new Intent(MypageActivity.this, CalendarActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n    }\r\n\r\n    /* 하단 홈 버튼 클릭 시 실행 함수 */\r\n    void clickBtnHome() {\r\n        Button btn_home = findViewById(R.id.btn_home);\r\n        btn_home.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //MainActivity로 이동\r\n                Intent intent = new Intent(MypageActivity.this, MainActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/se_app/MypageActivity.java b/app/src/main/java/com/example/se_app/MypageActivity.java
--- a/app/src/main/java/com/example/se_app/MypageActivity.java	(revision 98d278e2248b829c17b1c771e68f9f0d0f7b5981)
+++ b/app/src/main/java/com/example/se_app/MypageActivity.java	(date 1701100857943)
@@ -71,13 +71,13 @@
                 //응답 성공(200): 데이터베이스에서 회원 정보를 제대로 읽어왔을 때
                 if (response.isSuccessful()) {
                     //정보 출력
-                    tv_titleName.setText(response.body().getMemberName());
-                    tv_studentId.setText("학번 : " + response.body().getMemberId());
+                    tv_titleName.setText(response.body().getMemberName().toString());
+                    tv_studentId.setText("학번 : " + response.body().getMemberId().toString());
                     tv_password.setText("비밀번호 : " + response.body().getMemberPw());
-                    tv_name.setText("이름 : " + response.body().getMemberName());
-                    tv_major.setText("학과 : " + response.body().getMemberMajor());
-                    tv_birth.setText("생년월일 : " + response.body().getMemberBirth());
-                    tv_state.setText("상태 : " + response.body().getMemberState());
+                    tv_name.setText("이름 : " + response.body().getMemberName().toString());
+                    tv_major.setText("학과 : " + response.body().getMemberMajor().toString());
+                    tv_birth.setText("생년월일 : " + response.body().getMemberBirth().toString());
+                    tv_state.setText("상태 : " + response.body().getMemberState().toString());
                 }
             }
 
Index: app/src/main/java/com/example/se_app/EditActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.se_app;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Spinner;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.se_app.dto.EditDTO;\r\nimport com.example.se_app.dto.MypageDTO;\r\nimport com.example.se_app.instance.RetrofitInstance;\r\nimport com.example.se_app.service.Service;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\n\r\npublic class EditActivity extends AppCompatActivity {\r\n\r\n    private static final String TAG = RegisterActivity.class.getSimpleName();\r\n    Service service = RetrofitInstance.getRetrofitInstance().create(Service.class);\r\n    private String state;\r\n\r\n    /* 화면 시작 시 실행 함수 */\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_edit);\r\n\r\n        EditText et_password = findViewById(R.id.et_password); //비밀번호\r\n        EditText et_name = findViewById(R.id.et_name); //이름\r\n        EditText et_major = findViewById(R.id.et_major); //학과\r\n        EditText et_birth = findViewById(R.id.et_birth); //생년월일\r\n        Spinner sp_state = findViewById(R.id.spinner); //상태(재학/휴학/졸업)\r\n\r\n        /* 상태 리스트의 아이템 클릭 시 실행 구문 */\r\n        sp_state.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            //아이템이 선택된 경우\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                state = adapterView.getItemAtPosition(i).toString();\r\n            }\r\n\r\n            //아무것도 선택되지 않은 경우\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {\r\n                state = \"\";\r\n            }\r\n        });\r\n\r\n        //SharedPreferences에서 토큰 가져오기\r\n        String token = getToken();\r\n\r\n        //사용자 정보 가져오기\r\n        getUserData(token, et_password, et_name, et_major, et_birth, sp_state);\r\n\r\n        //확인 버튼 클릭 시 실행\r\n        clickBtnOk(token, et_password, et_name, et_major, et_birth);\r\n\r\n        //취소 버튼 클릭 시 실행 구문\r\n        clickBtnNo();\r\n    }\r\n\r\n    /* SharedPreferences에서 토큰을 가져오는 함수 */\r\n    String getToken() {\r\n        SharedPreferences sharedPreferences = getSharedPreferences(\"MySharedPref\", MODE_PRIVATE);\r\n        String token = sharedPreferences.getString(\"jwt_token\", \"\");\r\n        return token;\r\n    }\r\n\r\n    /* 사용자의 정보를 가져오는 함수 */\r\n    void getUserData(String token, EditText et_password, EditText et_name, EditText et_major, EditText et_birth, Spinner sp_state) {\r\n        Call<MypageDTO.MypageResponse> call = service.mypage(\"Bearer \" + token);\r\n        call.enqueue(new Callback<MypageDTO.MypageResponse>() {\r\n            //서버와 통신 성공\r\n            @Override\r\n            public void onResponse(Call<MypageDTO.MypageResponse> call, Response<MypageDTO.MypageResponse> response) {\r\n                //응답 성공(200): 데이터베이스에서 회원 정보를 제대로 읽어왔을 때\r\n                if (response.isSuccessful()) {\r\n                    //정보 출력\r\n                    et_password.setText(\"비밀번호 : \" + response.body().getMemberPw());\r\n                    et_name.setText(\"이름 : \" + response.body().getMemberName());\r\n                    et_major.setText(\"학과 : \" + response.body().getMemberMajor());\r\n                    et_birth.setText(\"생년월일 : \" + response.body().getMemberBirth());\r\n                    String state = response.body().getMemberState();\r\n                    sp_state.setSelection(getIndex(sp_state, state));\r\n                }\r\n            }\r\n\r\n            //서버와 통신 실패\r\n            @Override\r\n            public void onFailure(Call<MypageDTO.MypageResponse> call, Throwable t) {\r\n                Toast.makeText(EditActivity.this, \"서버와 통신을 실패하였습니다.\", Toast.LENGTH_SHORT).show();\r\n                Log.e(TAG, \"서버 통신 실패: \" + t.getMessage());\r\n            }\r\n        });\r\n    }\r\n\r\n    /* 확인 버튼 클릭 시 실행 함수 */\r\n    void clickBtnOk(String token, EditText et_password, EditText et_name, EditText et_major, EditText et_birth) {\r\n\r\n        Button btn_ok = findViewById(R.id.btn_ok);\r\n        btn_ok.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                EditDTO.EditRequest editRequest = new EditDTO.EditRequest(\r\n                        et_password.getText().toString(),\r\n                        et_name.getText().toString(), et_major.getText().toString(),\r\n                        state, et_birth.getText().toString());\r\n\r\n                Call<EditDTO.EditResponse> call = service.edit(\"Bearer \" + token, editRequest);\r\n                call.enqueue(new Callback<EditDTO.EditResponse>() {\r\n                    //서버와 통신 성공\r\n                    @Override\r\n                    public void onResponse(Call<EditDTO.EditResponse> call, Response<EditDTO.EditResponse> response) {\r\n                        //응답 성공(200): 데이터베이스에서 회원 정보를 제대로 읽어왔을 때\r\n                        if (response.isSuccessful()) {\r\n                            //body의 성공 메세지를 저장\r\n                            String message = response.body().getMessage();\r\n\r\n                            //성공 메세지를 토스트 메세지로 띄움\r\n                            Toast.makeText(EditActivity.this, message, Toast.LENGTH_SHORT).show();\r\n\r\n                            //MypageActivity로 이동\r\n                            Intent intent = new Intent(EditActivity.this, MypageActivity.class);\r\n                            startActivity(intent);\r\n                        }\r\n                    }\r\n\r\n                    //서버와 통신 실패\r\n                    @Override\r\n                    public void onFailure(Call<EditDTO.EditResponse> call, Throwable t) {\r\n                        Toast.makeText(EditActivity.this, \"서버와 통신을 실패하였습니다.\", Toast.LENGTH_SHORT).show();\r\n                        Log.e(TAG, \"서버 통신 실패: \" + t.getMessage());\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    /* 취소 버튼 클릭 시 실행 함수 */\r\n    void clickBtnNo() {\r\n        Button btn_no = findViewById(R.id.btn_no);\r\n        btn_no.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                //MypageActivity로 이동(뒤로가기)\r\n                Toast.makeText(EditActivity.this, \"정보 수정을 취소합니다.\", Toast.LENGTH_SHORT).show();\r\n                EditActivity.super.onBackPressed();\r\n            }\r\n        });\r\n    }\r\n\r\n    /* state 초기 값의 번호를 찾아주는 함수 */\r\n    private int getIndex(Spinner sp, String item) {\r\n        for (int i = 0; i < sp.getCount(); i++) {\r\n            if (sp.getItemAtPosition(i).toString().equalsIgnoreCase(item)) {\r\n                return i;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/se_app/EditActivity.java b/app/src/main/java/com/example/se_app/EditActivity.java
--- a/app/src/main/java/com/example/se_app/EditActivity.java	(revision 98d278e2248b829c17b1c771e68f9f0d0f7b5981)
+++ b/app/src/main/java/com/example/se_app/EditActivity.java	(date 1701102066628)
@@ -85,11 +85,11 @@
                 //응답 성공(200): 데이터베이스에서 회원 정보를 제대로 읽어왔을 때
                 if (response.isSuccessful()) {
                     //정보 출력
-                    et_password.setText("비밀번호 : " + response.body().getMemberPw());
-                    et_name.setText("이름 : " + response.body().getMemberName());
-                    et_major.setText("학과 : " + response.body().getMemberMajor());
-                    et_birth.setText("생년월일 : " + response.body().getMemberBirth());
-                    String state = response.body().getMemberState();
+                    et_password.setText("비밀번호 : " + response.body().getMemberPw().toString());
+                    et_name.setText("이름 : " + response.body().getMemberName().toString());
+                    et_major.setText("학과 : " + response.body().getMemberMajor().toString());
+                    et_birth.setText("생년월일 : " + response.body().getMemberBirth().toString());
+                    String state = response.body().getMemberState().toString();
                     sp_state.setSelection(getIndex(sp_state, state));
                 }
             }
